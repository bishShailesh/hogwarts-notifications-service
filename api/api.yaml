openapi: 3.0.3
info:
  title: Hogwarts Notifications Service
  version: 1.0.0
  description: API for sending and receiving enchanted notifications at Hogwarts.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://api.hogwarts.edu/notifications
    description: Production server
  - url: https://dev.hogwarts.edu/notifications
    description: Development server
security:
  - bearerAuth: []
paths:
  /notifications:
    post:
      operationId: createNotification
      summary: Create and enqueue a notification
      description: Accepts a JSON body with senderId, recipientId, recipientEmail, and message. Stores the notification and enqueues it for delivery.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotification'
      responses:
        '201':
          description: Notification created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        '400':
          description: Bad Request (missing or invalid fields)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Duplicate notification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: listNotifications
      summary: List notifications (filter by senderId, recipientId, recipientEmail, and message)
      description: Returns all notifications filtered by senderId, recipientId, recipientEmail, and message. Response includes metadata and notifications list.
      security:
        - bearerAuth: []
      parameters:
        - name: senderId
          in: query
          required: false
          schema:
            type: string
          example: "prof-snape"
        - name: recipientId
          in: query
          required: false
          schema:
            type: string
          example: "user-1234"
        - name: recipientEmail
          in: query
          required: false
          schema:
            type: string
            format: email
          example: "hermione.granger@hogwarts.edu"
        - name: message
          in: query
          required: false
          schema:
            type: string
          example: "Reminder: Potions homework due tomorrow"
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
          example: 10
      responses:
        '200':
          description: List of notifications (filtered) with metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationListResponse'
        '400':
          description: Bad Request (invalid parameters)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /notifications/{id}:
    get:
      operationId: getNotificationById
      summary: Get a notification by its ID
      description: Returns a single notification by its unique ID.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: "a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5p6"
      responses:
        '200':
          description: Notification found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        '404':
          description: Notification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad Request (invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CreateNotification:
      type: object
      required:
        - senderId
        - recipientId
        - recipientEmail
        - message
      properties:
        senderId:
          type: string
          example: "prof-snape"
        recipientId:
          type: string
          example: "user-1234"
        recipientEmail:
          type: string
          format: email
          example: "hermione.granger@hogwarts.edu"
        message:
          type: string
          example: "Reminder: Potions homework due tomorrow"
    Notification:
      type: object
      required:
        - id
        - senderId
        - recipientId
        - recipientEmail
        - message
        - status
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
          example: "a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5p6"
        senderId:
          type: string
          example: "prof-snape"
        recipientId:
          type: string
          example: "user-1234"
        recipientEmail:
          type: string
          format: email
          example: "hermione.granger@hogwarts.edu"
        message:
          type: string
          example: "Reminder: Potions homework due tomorrow"
        status:
          type: string
          enum: [queued, delivered]
          example: "queued"
        createdAt:
          type: string
          format: date-time
          example: "2025-10-02T12:34:56Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-10-02T12:34:56Z"
    NotificationListResponse:
      type: object
      properties:
        metadata:
          type: object
          properties:
            total:
              type: integer
              example: 25
            returned:
              type: integer
              example: 10
            filter:
              type: object
              additionalProperties: true
              example:
                recipientId: "user-1234"
                senderId: "prof-snape"
                limit: 10
            limit:
              type: integer
              example: 10
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    Error:
      type: object
      required:
        - statusCode
        - code
        - message
      properties:
        statusCode:
          type: integer
          example: 400
        code:
          type: string
          example: "BAD_REQUEST"
        message:
          type: string
          example: "Bad Request: recipientId is required."
        details:
          type: string
          example: "RecipientId must be a valid string."
